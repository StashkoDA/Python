import os
os.system('cls') # очистка терминала


# Задача №1. Ввод-вывод, операторы ветвления.
# За день машина проезжает n километров. Сколько
# дней нужно, чтобы проехать маршрут длиной m
# километров? При решении этой задачи нельзя
# пользоваться условной инструкцией if и циклами.

# import math # округление в большую сторону
# n = int(input('Введите кол-во километров в день: '))
# m = int(input('Введите длину маршрута: '))

# # s = math.ceil(m/n) # округление в большую сторону
# # print(s)

# # или:
# def arg(n, m):
#     return (m + n - 1)//n
# res = arg(n, m)
# print(res)

# Задача №3.
# В некоторой школе решили набрать три новых
# математических класса и оборудовать кабинеты для
# них новыми партами. За каждой партой может сидеть
# два учащихся. Известно количество учащихся в
# каждом из трех классов. Выведите наименьшее
# число парт, которое нужно приобрести для них.
# Input: 20 21 22(ввод чисел НЕ в одну строку)
# Output: 32

# import math

# list = []
# clss = range(3)
# sum = 0
# for i in clss:
#     list.append(int(input(f'введите кол-во учеников в классе {i+1}: ')))
#     part = math.ceil(list[i]/2)
#     sum = sum + part
# print(f'Кол-во учеников в классах: {list}')
# print(f'Общее минимальное кол-во парт: {sum}')

# или
# a = int(input("Student number "))
# b = int(input("Student number "))
# c = int(input("Student number "))

# def Tables(a):
#     return a//2+a % 2

# print("Количество парт для покупки", Tables(a) + Tables(b) + Tables(c))

# или
# list = []
# clss = range(3)
# sum = 0
# for i in clss:
#     list.append(int(input(f'введите кол-во учеников в классе {i+1}: ')))
#     part = list[i] // 2 + list[i] % 2
#     sum = sum + part
# print(f'Кол-во учеников в классах: {list}')
# print(f'Общее минимальное кол-во парт: {sum}')

# Задача №5. 
# Вагоны в электричке пронумерованы натуральными числами, начиная с 1 
# (при этом иногда вагоны нумеруются от «головы» поезда, а иногда – с «хвоста»;
# это зависит от того, в какую сторону едет электричка). 
# В каждом вагоне написан его номер. 
# Витя сел в i-й вагон от головы поезда и обнаружил, что его вагон имеет номер j.
# Он хочет определить, сколько всего вагонов в электричке. Напишите программу, 
# которая будет это делать или сообщать, 
# что без дополнительной информации это сделать невозможно. 
# Input: 3 4(ввод на разных строках) Output: 6

# vagon_start = int(input('Введите номер вагона от головы: '))
# vagon_fact = int(input('Введите номер вагона фактический: '))

# def sum_vagon(start, fact):
#     return start + fact -1
# if vagon_start < vagon_fact:
#     print(f'Нумерация вагона идёт с хвоста и кол-во вагонов = {sum_vagon(vagon_start, vagon_fact)}')
# else:
#     print('Нумерация вагонов идёт с головы. Не хватает данных.')

# Задача №7.
# Дано натуральное число. Требуется определить,
# является ли год с данным номером високосным. Если год является високосным,
# то выведите YES, иначе выведите NO. Напомним, что в соответствии с григорианским
# календарем, год является високосным, если его номер кратен 4, но не кратен
# 100, а также если он кратен 400.
# Input: 2016
# Output: YES

year = int(input('Введите год: '))
if year % 400 == 0 or (year % 4 == 0 and year % 100 != 0):
    print('Год високосный - YES')
else:
    print('Год не високосный - NO')
